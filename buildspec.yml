version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Entered the install phase...
      - echo Installing Maven...
      - apt-get update
      - apt-get install -y maven

  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - echo Running Maven clean install...
      - mvn clean install

  build:
    commands:
      - echo Entered the build phase...
      - echo Building the Docker image...
      - echo $AWS_ACCOUNT_ID
      - echo $AWS_DEFAULT_REGION
      - echo $IMAGE_REPO_NAME
      - echo $IMAGE_TAG
      - aws ecr get-login-password --region eu-south-2 | docker login --username AWS --password-stdin 968127021175.dkr.ecr.eu-south-2.amazonaws.com
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#      - echo Writing image definitions file...
#      - printf '[{"name":"IngridTask","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
#      - printf '[{"name":"ingridImage","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - aws s3 cp appspec.yaml s3://test-codedeploy-neal/appspec.yaml
      - aws deploy create-deployment --cli-input-json file://create-deployment.json
      - echo Done!

#artifacts:
#  files: imagedefinitions.json
